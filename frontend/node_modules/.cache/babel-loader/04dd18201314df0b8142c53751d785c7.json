{"ast":null,"code":"var _jsxFileName = \"/home/admin-dci/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/DCI/backend/2022-04-21/frontend/src/components/TaskContainer.js\",\n    _s = $RefreshSig$();\n\nimport TaskList from \"./TaskList\";\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TaskContainer = () => {\n  _s();\n\n  useEffect(() => {\n    const tasksContainer = document.querySelector('.tasks-container');\n    const tasksList = document.querySelector('.tasks__list');\n    const tasksElements = tasksContainer.querySelectorAll('.tasks__item');\n    console.log(tasksElements);\n\n    for (const task of tasksElements) {\n      task.draggable = true;\n    }\n\n    tasksContainer.addEventListener('dragstart', e => {\n      e.target.classList.add('selected');\n    });\n    tasksContainer.addEventListener('dragend', e => {\n      e.target.classList.remove('selected');\n    });\n    tasksContainer.addEventListener('dragover', e => {\n      e.preventDefault();\n      const activeElement = tasksContainer.querySelector(`.selected`);\n      const currentElement = e.target;\n      const isMoveable = activeElement !== currentElement && currentElement.classList.contains(`tasks__item`);\n\n      if (!isMoveable) {\n        return;\n      }\n\n      const nextElement = currentElement === activeElement.nextElementSibling ? currentElement.nextElementSibling : currentElement;\n      tasksContainer.insertBefore(activeElement, nextElement);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"tasks-container\",\n    children: [/*#__PURE__*/_jsxDEV(TaskList, {\n      status: 'backlog'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n      status: 'in-process'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n      status: 'ready'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n      status: 'remove'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TaskContainer, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = TaskContainer;\nexport default TaskContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskContainer\");","map":{"version":3,"sources":["/home/admin-dci/Рабочий стол/DCI/backend/2022-04-21/frontend/src/components/TaskContainer.js"],"names":["TaskList","useEffect","TaskContainer","tasksContainer","document","querySelector","tasksList","tasksElements","querySelectorAll","console","log","task","draggable","addEventListener","e","target","classList","add","remove","preventDefault","activeElement","currentElement","isMoveable","contains","nextElement","nextElementSibling","insertBefore"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,YAArB;AACA,SAAQC,SAAR,QAAwB,OAAxB;;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAE3BD,EAAAA,SAAS,CAAC,MAAM;AACf,UAAME,cAAc,GAAGC,QAAQ,CAACC,aAAT,CAAuB,kBAAvB,CAAvB;AACA,UAAMC,SAAS,GAAGF,QAAQ,CAACC,aAAT,CAAuB,cAAvB,CAAlB;AACA,UAAME,aAAa,GAAGJ,cAAc,CAACK,gBAAf,CAAgC,cAAhC,CAAtB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,aAAZ;;AACA,SAAI,MAAMI,IAAV,IAAkBJ,aAAlB,EAAiC;AAChCI,MAAAA,IAAI,CAACC,SAAL,GAAiB,IAAjB;AACA;;AACDT,IAAAA,cAAc,CAACU,gBAAf,CAAgC,WAAhC,EAA8CC,CAAD,IAAO;AACnDA,MAAAA,CAAC,CAACC,MAAF,CAASC,SAAT,CAAmBC,GAAnB,CAAuB,UAAvB;AACA,KAFD;AAGAd,IAAAA,cAAc,CAACU,gBAAf,CAAgC,SAAhC,EAA4CC,CAAD,IAAO;AACjDA,MAAAA,CAAC,CAACC,MAAF,CAASC,SAAT,CAAmBE,MAAnB,CAA0B,UAA1B;AACA,KAFD;AAGAf,IAAAA,cAAc,CAACU,gBAAf,CAAgC,UAAhC,EAA6CC,CAAD,IAAO;AAClDA,MAAAA,CAAC,CAACK,cAAF;AACA,YAAMC,aAAa,GAAGjB,cAAc,CAACE,aAAf,CAA8B,WAA9B,CAAtB;AACA,YAAMgB,cAAc,GAAGP,CAAC,CAACC,MAAzB;AAEA,YAAMO,UAAU,GAAGF,aAAa,KAAKC,cAAlB,IAClBA,cAAc,CAACL,SAAf,CAAyBO,QAAzB,CAAmC,aAAnC,CADD;;AAGA,UAAI,CAACD,UAAL,EAAiB;AAChB;AACA;;AACD,YAAME,WAAW,GAAIH,cAAc,KAAKD,aAAa,CAACK,kBAAlC,GAA4DJ,cAAc,CAACI,kBAA3E,GAAgGJ,cAApH;AACAlB,MAAAA,cAAc,CAACuB,YAAf,CAA4BN,aAA5B,EAA2CI,WAA3C;AACA,KAbD;AAcA,GA5BQ,EA4BN,EA5BM,CAAT;AA8BC,sBACE;AAAS,IAAA,SAAS,EAAC,iBAAnB;AAAA,4BACE,QAAC,QAAD;AAAU,MAAA,MAAM,EAAE;AAAlB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,QAAD;AAAU,MAAA,MAAM,EAAE;AAAlB;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,QAAD;AAAU,MAAA,MAAM,EAAE;AAAlB;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,QAAD;AAAU,MAAA,MAAM,EAAE;AAAlB;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAxCD;;GAAMtB,a;;KAAAA,a;AA0CN,eAAeA,aAAf","sourcesContent":["import TaskList from \"./TaskList\";\nimport {useEffect} from 'react';\n\nconst TaskContainer = () => {\n\n\tuseEffect(() => {\n\t\tconst tasksContainer = document.querySelector('.tasks-container');\n\t\tconst tasksList = document.querySelector('.tasks__list');\n\t\tconst tasksElements = tasksContainer.querySelectorAll('.tasks__item');\n\t\tconsole.log(tasksElements)\n\t\tfor(const task of tasksElements) {\n\t\t\ttask.draggable = true;\n\t\t}\n\t\ttasksContainer.addEventListener('dragstart', (e) => {\n\t\t\te.target.classList.add('selected');\n\t\t})\n\t\ttasksContainer.addEventListener('dragend', (e) => {\n\t\t\te.target.classList.remove('selected');\n\t\t})\n\t\ttasksContainer.addEventListener('dragover', (e) => {\n\t\t\te.preventDefault();\n\t\t\tconst activeElement = tasksContainer.querySelector(`.selected`);\n\t\t\tconst currentElement = e.target;\n\t\t\t\n\t\t\tconst isMoveable = activeElement !== currentElement &&\n\t\t\t\tcurrentElement.classList.contains(`tasks__item`);\n\n\t\t\tif (!isMoveable) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst nextElement = (currentElement === activeElement.nextElementSibling) ? \t\t\t\tcurrentElement.nextElementSibling : currentElement;\n\t\t\ttasksContainer.insertBefore(activeElement, nextElement);\n\t\t})\n\t}, [])\n\n  return(\n    <section className=\"tasks-container\">\n      <TaskList status={'backlog'} />\n      <TaskList status={'in-process'}/>\n      <TaskList status={'ready'}/>\n      <TaskList status={'remove'}/>\n    </section>\n  )\n}\n\nexport default TaskContainer;"]},"metadata":{},"sourceType":"module"}